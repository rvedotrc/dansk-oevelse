#!/usr/bin/env ruby

require 'json'
require 'readline'

$: << '.'
require 'ord_list'
require 'bøjning'

def tjek_bøjning(matchende_verber, svar)
  grund = matchende_verber.first[:infinitiv].sub('at ', '')

  svar_ord = svar.split(/\s*,\s*/).map {|spec| Bøjning.bøj(grund, spec) }
  if svar_ord.count != 3
    puts "Man skal indtaste tre svar"
    return false
  end

  gætter = {
    nutid: svar_ord[0],
    datid: svar_ord[1],
    førnutid: svar_ord[2],
  }

  ok = matchende_verber.select do |verbum|
    resultater = gætter.each_pair.map do |form, gæt|
      if verbum[form].include?(gæt)
        { ok: true, vis: gæt }
      elsif verbum[form].count > 1
        { ok: false, vis: "[#{verbum[form].count} muligheder]" }
      else
        { ok: false, vis: "[forkert]" }
      end
    end

    if resultater.all? {|r| r[:ok] }
      true
    else
      puts "  " + resultater.map {|r| r[:vis] }.join(', ')
      false
    end
  end

  ok.any?
end

def vælg_verbum(ord_list)
  gode = ord_list.verber.select {|v| v[:antal_dårlige] == 0 }
  raise if gode.empty?

  # gode = gode.select {|v| v[:infinitiv]=='at male'}
  verbum = gode.shuffle.first

  ord_list.verber.select do |v|
    v[:infinitiv] == verbum[:infinitiv]
  end
end

ord_list = OrdList.new

puts "Svarer skal gives i nutid, datid og førnutid (dvs 'at være' bliver: er, var, været)"
puts "Du må bruge den forkortelse syntax: fx '-de' eller '...gør'"
puts "Gruppe 1 er derfor '-r, -de, -t', der kan desuden blive forkortet bare til '1'"
puts

while true
  matchende_verber = vælg_verbum(ord_list)
  puts "Bøj verbet '#{matchende_verber.first[:infinitiv]}'"

  while true
    svar = Readline.readline("['meh' giver op] >> ", true)

    if svar.nil?
      puts
      exit
    end

    svar.chomp!

    if svar == 'meh'
      puts "Nååå.  Muligt svarer var:"
      matchende_verber.each do |verbum|
        puts "  " + verbum[:tekst]
      end
      break
    end

    if svar == '1'
      svar = '-r, -de, -t'
    end

    if tjek_bøjning(matchende_verber, svar)
      puts "korrekt!"
      break
    end
  end

  puts ""
end

# eof
